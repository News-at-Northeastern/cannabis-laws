// set the ranges
var x = d3.scaleLinear()
    .domain([-75,75])
    .range([0,120]);

var y = d3.scaleBand()
    .range([ 0, height-margin.bottom])
    .padding(.4);

var svg = d3.select(".wrapper").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
    .append("g")
    .attr("transform", "translate(" + ((width < 768) ? 10 : 120) + ",0)");

d3.json('/interactive/2018/10/bubble/data/sportstitles.json')
    .then(function(data) {

        var width = d3.select("#vis" + questionid).node().getBoundingClientRect().width;
        var height = 500;

        svg.append("g")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(x).ticks(0))
            .select(".domain").remove();

        y.domain(data.map(function(d) { return d.group }))


        svg.append("g")
            .call(d3.axisLeft(y).tickSize(0))
            .attr("transform", "translate(0,0)")
            .attr("text-anchor", ((width < 768) ? "start" : "end"))
            .select(".domain")
            .remove();

        var brexitcolor = d3.scaleLinear()
            .domain([-75,0,75])
            .range(["#43cfbd", "#aaa","#f0bb4c"])
            .interpolate(d3.interpolateHcl);

          // tooltip
        var tooltip = d3.tip()
            .attr('class', 'd3-tip')
            .direction('n')
            .html(function(d,i) {
              return "<h4>" + d.demographic + "</h4>" +
              "Remain: " + d.remain + "%<br/>" +
              "Leave: " + d.leave + "%" ;
            });

        // svg.append('circle').attr('id','tooltip_point' + questionid);
        svg.call(tooltip);

        svg
          .selectAll("lines")
          .data(data)
          .enter()
          .append("line")
            .attr("x1", x(-75))
            .attr("x2", x(75))
            .attr("y1", function(d){return(y(d.group) + y.bandwidth()/2)})
            .attr("y2", function(d){return(y(d.group) + y.bandwidth()/2)})
            .attr("stroke", "#7d7d7d")
            .style("width", 40);

        svg
          .append("line")
              .attr("x1", x(0))
              .attr("x2", x(0))
              .attr("y1", 0)
              .attr("y2", height - margin.bottom)
              .attr("stroke", "#7d7d7d")
              .style("width", 40);

        svg
          .append("text")
              .attr("class","label")
              .attr("x", x(1))
              .attr("y", height - margin.bottom)
              .attr("text-anchor", "middle")
              .html("&#8592; Leave &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Remain &#8594;");

        var datapts = svg
          .selectAll("indPoints")
          .data(data)
          .enter()
          .append("g")
          .attr("transform",function(d) {
              if (d.demographic == "SNP" || d.demographic == "Small city or town") {
                  return "translate(" + x(d.remain - d.leave) + "," + (y(d.group) + (y.bandwidth()/2) - 8) + ")";
              } else if (d.demographic == "Lib Dems" || d.demographic == "Rural area") {
                  return "translate(" + x(d.remain - d.leave) + "," + (y(d.group) + (y.bandwidth()/2) + 8) + ")";
              } else {
                  return "translate(" + x(d.remain - d.leave) + "," + (y(d.group) + (y.bandwidth()/2)) + ")";
              }
          });

        datapts.append("text")
          .text(function(d){return d.demographic})
          .attr("font-size","10px")
          .attr("transform", function(d) {return "translate(8,-8), rotate(-35)" })
          .attr("fill","white");

        var jitterWidth = 20;
        datapts.append("circle")
          // .attr("cx", function(d){ return(x(d.remain - d.leave))})
          // .attr("cy", function(d){ return( y(d.group) + (y.bandwidth()/2)); })
          .attr("r", 8)
          .style("fill", function(d) { return brexitcolor(d.remain - d.leave); })
          .on('mouseover', tooltip.show)
              .on('mouseout', tooltip.hide);

    }) //read-in function
    .catch(function(error){
     // handle error
    });
