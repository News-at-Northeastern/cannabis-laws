// set the ranges
var x = d3.scaleBand()
  .range([0, width])
  .padding(0.2);

var xInner = d3.scaleBand()
    .padding(0)

var y = d3.scaleLinear()
  .range([height, 0]);

var colorscale = d3.scaleLinear()
    .range(colors.procon.reverse())
    .interpolate(d3.interpolateCubehelix);

var svg = d3.select("#vis1").append("svg")
.attr("width", width + margin.left + margin.right)
.attr("height", height + margin.top + margin.bottom)
.append("g")
.attr("transform",
  "translate(" + margin.left + "," + margin.top + ")");

d3.json('/interactive/2019/06/gallup/data/countrylevel.json')
      .then(function(data) {

          var countries = ["can", "uk", "us"];
          data = data.filter(function(d) {return d.question_id == 1 && d.answer !== "Total";})
          // data = Array.from(d3.group(data, function(d) {return d.question;}));

          var newdata = [];
          data.forEach(function(d) {

            for (var c in countries) {
                var obj = {};
                obj.country_id = c;
                obj.country = countries[c];
                obj.count = d[countries[c] + "_pct"];
                obj.answer = d.answer;
                newdata.push(obj);
            }
          });

          console.log(newdata);

          x.domain(countries);
          xInner.domain(data.map(function(d) {return d.answer;})).range([0, x.bandwidth()]);
          y.domain([0, 50]);
          colorscale.domain([xInner("Excellent"), xInner("Poor")]);


        //   // Scale the range of the data in the domains
        //
        //     var categoriesNames = data.map(function(d) { return d.answer; });
        //     var rateNames = data[0].values.map(function(d) { return d.country; });
        //
        //     x0.domain(categoriesNames);
        //     x1.domain(rateNames).rangeRoundBands([0, x0.rangeBand()]);
        //     y.domain([0, d3.max(data, function(answer) { return d3.max(answer.values, function(d) { return d.value; }); })]
        //
        // // append the rectangles for the bar chart
        svg.selectAll(".bar")
            .data(newdata)
          .enter().append("rect")
            .attr("class", "bar")
            .attr("x", function(d) { return xInner(d.answer) + x(d.country);})
            .attr("width", xInner.bandwidth())
            .attr("y", function(d) { return y(d.count); })
            .attr("height", function(d) { return height - y(d.count); })
            .attr("class", function(d) { return d.country; })
            .attr("fill", function(d) { return colorscale(xInner(d.answer)); });

        // add the x Axis
        svg.append("g")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(x));

        // add the y Axis
        svg.append("g")
            .call(d3.axisLeft(y));


      }) //read-in function
      .catch(function(error){
         // handle error
      });
